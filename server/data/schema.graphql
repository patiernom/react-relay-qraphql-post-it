input addEntryInput {
  userId: ID!
  text: String!
  clientMutationId: String
}

type addEntryPayload {
  entryEdge: EntryEdge
  viewer: User
  clientMutationId: String
}

# Entries
type Entry implements Node {
  # The ID of an object
  id: ID!

  # User of the Entry
  userId: ID

  # text of the Entry
  text: String

  # timestamp of the Entry
  timestamp: Float
}

# A connection to a list of items.
type EntryConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [EntryEdge]
}

# An edge in a connection.
type EntryEdge {
  # The item at the end of the edge
  node: Entry

  # A cursor for use in pagination
  cursor: String!
}

input modifyEntryInput {
  id: ID!
  text: String!
  clientMutationId: String
}

type modifyEntryPayload {
  entryEdge: EntryEdge
  viewer: User
  clientMutationId: String
}

type Mutation {
  addEntry(input: addEntryInput!): addEntryPayload
  modifyEntry(input: modifyEntryInput!): modifyEntryPayload
  removeEntry(input: removeEntryInput!): removeEntryPayload
}

# An object with an ID
interface Node {
  # The id of the object.
  id: ID!
}

# Information about pagination in a connection.
type PageInfo {
  # When paginating forwards, are there more items?
  hasNextPage: Boolean!

  # When paginating backwards, are there more items?
  hasPreviousPage: Boolean!

  # When paginating backwards, the cursor to continue.
  startCursor: String

  # When paginating forwards, the cursor to continue.
  endCursor: String
}

type Query {
  # Fetches an object given its ID
  node(
    # The ID of an object
    id: ID!
  ): Node
  viewer(id: ID!): User
}

input removeEntryInput {
  id: ID!
  clientMutationId: String
}

type removeEntryPayload {
  viewer: User
  clientMutationId: String
}

# A person who uses our app
type User implements Node {
  # The ID of an object
  id: ID!

  # Entries that I have
  entries(after: String, first: Int, before: String, last: Int): EntryConnection

  # Users's username
  username: String

  # Users's first name
  firstName: String

  # Users's last name
  lastName: String

  # User's email
  email: String
}
